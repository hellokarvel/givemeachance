#include <stdio.h>
#include <math.h>
#define p 0.618
#define m 10  
#define R 1000           
float f(float x[]);
void qujian(int n,float x0[],float h,float s[],float a[],float b[]);
void goldcut(int n,float a[],float b[],float flag,float x[]);
void powell(int n,float x0[],float h,float flag,float a[],float b[],float x[]);

float max(float a,float b)
{
if(a>b)
return a;
else
return b;	
}

/*目标函数*/ 
float fun(float x[])
{
	float result;
	result=x[0]*x[0]+x[1]*x[1]-x[0]*x[1]-10*x[0]-4*x[1]+60;
	return result;
} 
//约束条件 
float g(float x[])
{
	float result;
	result=x[0]+x[1]-8;
	return result;
}
//构造的罚函数 
float f(float x[],float r)
{
 float result;
 result=fun(x)+r*max(g(x)*g(x),0); 
 return result;
} 
  

/*多维进退法子程序*/
void qujian(int n,float x0[],float h,float s[],float a[],float b[],float r)
{
 int i;
 float x1[m],x2[m],x3[m],f1,f2,f3;
 for(i=0;i<n;i++)         
  {
   x1[i]=x0[i];
   x2[i]=x0[i]+h*s[i];
  }
 f1=f(x1,r);
 f2=f(x2,r);
 if(f2>=f1)              
  {                       
   h=(-1.0)*h;
   for(i=0;i<n;i++)
    x3[i]=x1[i];
   f3=f1;
   for(i=0;i<n;i++)
    x1[i]=x2[i];
   f1=f2;
   for(i=0;i<n;i++)
    x2[i]=x3[i];
   f2=f3;
  }                       
 
 for(i=0;i<n;i++)         
  x3[i]=x2[i]+h*s[i];
 f3=f(x3,r);
 while(f3<f2)             
  {                       
   h=2*h;
   for(i=0;i<n;i++)
    x1[i]=x2[i];
   f1=f2;
   for(i=0;i<n;i++)
    x2[i]=x3[i];
   f2=f3;
   for(i=0;i<n;i++)
    x3[i]=x2[i]+h*s[i];
   f3=f(x3,r);
  }                       
 for(i=0;i<n;i++)         
  {
	 if(x1[i]<x3[i])
    {
     a[i]=x1[i];
     b[i]=x3[i];
    }
   else
    {
     a[i]=x3[i];
     b[i]=x1[i];
    }
  }
}

/*多维黄金分割法子程序*/
void goldcut(int n,float a[],float b[],float flag,float x[],float r)
{
 int i;
 float x1[m],x2[m],f1,f2,sum;
 for(i=0;i<n;i++)             
  x1[i]=b[i]-p*(b[i]-a[i]);
 f1=f(x1,r);
 for(i=0;i<n;i++)
  x2[i]=a[i]+p*(b[i]-a[i]);
 f2=f(x2,r);
 do
  {
   if(f1<=f2)                  
    {                          
     for(i=0;i<n;i++)
      b[i]=x2[i];
     for(i=0;i<n;i++)
      x2[i]=x1[i];
     f2=f1;
     for(i=0;i<n;i++)
      x1[i]=b[i]-p*(b[i]-a[i]);
     f1=f(x1,r);
    }
   else
    {                         
     for(i=0;i<n;i++)
      a[i]=x1[i];
     for(i=0;i<n;i++)
      x1[i]=x2[i];
     f1=f2;
     for(i=0;i<n;i++)
      x2[i]=a[i]+p*(b[i]-a[i]);
     f2=f(x2,r);
    }
   sum=0;
   for(i=0;i<n;i++)
    sum+=(b[i]-a[i])*(b[i]-a[i]);
  }while(sqrt(sum)>flag*0.1);              
 for(i=0;i<n;i++)
  x[i]=0.5*(b[i]+a[i]);         
}

/*鲍威尔法子程序*/
void powell(int n,float x0[],float h,float flag,float a[],float b[],float x[],float r)
{
 int i,j,k,o;
 float x1[m],x2[m],f0,f1,f2,fn[m],s[m][m],sum,xx[m];
 for(i=0;i<n;i++)              
  for(k=0;k<n;k++)
   if(i==k)
    s[i][k]=1;
   else
    s[i][k]=0;
 k=1;
 while(1)
  {
   for(i=0;i<n;i++)
   { 
    x1[i]=x0[i];
    xx[i]=x1[i];
   }
   for(i=0;i<n;i++)            
    {
    	
     qujian(n,x1,h,s[i],a,b,r);     
     goldcut(n,a,b,flag,x1,r);     
     fn[i]=f(xx,r)-f(x1,r);         
    }
   for(i=0;i<n;i++)            
    x2[i]=2*x1[i]-x0[i];
   for(i=1;i<n-1;i++)            
    if(fn[0]<fn[i])
     {
      fn[0]=fn[i];
      o=i;
     }
    else
     o=0;
   f0=f(x0,r);                   
   f1=f(x1,r);
   f2=f(x2,r);
   if(f2>=f0||(f0-2*f1+f2)*(f0-f1-fn[0])*(f0-f1-fn[0])>=0.5*fn[0]*(f0-f2)*(f0-f2))
    {                          
      sum=0;                    
     for(i=0;i<n;i++)
      sum+=(x1[i]-x0[i])*(x1[i]-x0[i]);
     if(f1<=f2)               
      for(i=0;i<n;i++)         
       x0[i]=x1[i];
     else
      for(i=0;i<n;i++)          
       x0[i]=x2[i];
      
    }
   else
    {                          
     for(i=o;i<n;i++)          
      for(j=0;j<n;j++)
       s[i][j]=s[i+1][j];
     for(i=0;i<n;i++)           
      s[n-1][i]=x1[i]-x0[i];
     qujian(n,x1,h,s[n],a,b,r);    
     goldcut(n,a,b,flag,x1,r);
     sum=0;                    
     for(i=0;i<n;i++)
      sum+=(x1[i]-x0[i])*(x1[i]-x0[i]);
     for(i=0;i<n;i++)          
      x0[i]=x1[i];
    }
   if(sqrt(sum)<=flag)          
    break;
   else
    k+=1;
  }
 for(i=0;i<n;i++)              
  x[i]=x1[i];
}

//惩罚函数主程序 
int main()
{
 int i,n,k;
 float h,flag,x0[m],a[m],b[m],x[m],xx[m];
 float Q,e1,e2,r,c=8,sum;
 printf("请输入维数:\n");
 scanf("%d",&n);

printf("请输入初始点:");
for(i=0;i<n;i++)
{
printf("\nx0[%d]=",i);
scanf("%f",&x0[i]);
}


 printf("\n请输入初始步长:\n");
 scanf("%f",&h);
 printf("\n请输入精度1:\n");
 scanf("%f",&e1);
 printf("\n请输入精度2:\n");
 scanf("%f",&e2);
 printf("\n请输入r：\n");
 scanf("%f",&r);
 flag=0.1*e1;
 k=0;
while(1)
{
	for(i=0;i<n;i++) xx[i]=x0[i];
	powell(n,x0,h,flag,a,b,x,r);
	Q=r*g(x);
	if(Q<=e1)
	break;
	sum=0;
for(i=0;i<n;i++)
sum+=(x[i]-xx[i])*(x[i]-xx[i]);
	if(r>R&&sqrt(sum)<=e2)
	break;
	r*=c;
	for(i=0;i<n;i++)
	x0[i]=x[i]; 
	k+=1;
}
 printf("\n极小点坐标为:\n");
 for(i=0;i<n;i++)
  printf("x[%d]=%f\n",i,x[i]);
 printf("\n极小值为:\n%f\n",fun(x));
}
